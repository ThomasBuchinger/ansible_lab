---
- name: "[Prepare] Install packages"
  yum:
    name: 
    - ipa-client
    - bind-utils
#    - NetworkManager-glib
#    - libnm-qt
#    - libsemanage-python
#    - policycoreutils-python

    state: present


# Uninstall ipa client, if force is set
#
# Check if IPA is already enrolled 
- name: "[Enrollment] Checking if IPA client is installed"
  shell: "if [ -f /etc/sssd/sssd.conf ]; then cat /etc/sssd/sssd.conf; else echo not installed; fi"
  register: sssd_conf
  ignore_errors: True
  changed_when: False

# If enrolled, uninstall client
- name: "[Unroll] Uninstall IPA client if forced"
  command: "ipa-client-install --uninstall"
  when: "'ipa_server' in sssd_conf.stdout and ipa_client_force == 'true'"
  register: cmd_ipa_uninstalled

- name: "[Prepare] Set FQDN"
  hostname:
    name: "{{ ansible_hostname }}.{{ ipa_domain }}"

- name: "[Prepare] Verify DNS Settungs"
  command: "nslookup ipa.{{ ipa_domain }}"
  failed_when: result.rc == 1
  changed_when: result.rc != 0
  register: result


- name: "[Enrollment] Refresh IPA client installation status"
  shell: "if [ -f /etc/sssd/sssd.conf ]; then cat /etc/sssd/sssd.conf; else echo not installed; fi"
  register: sssd_conf
  ignore_errors: True
  changed_when: False

- name: "[Enrollment] Configure IPA client"
  command: "ipa-client-install -U --no-ntp -p admin -w {{ ipa_admin_password }} --domain {{ ipa_domain }} --mkhomedir --force-join"
  when: "'ipa_server' not in sssd_conf.stdout"

