---
apiVersion: v1
kind: Secret
metadata:
  name: traefik-forward-auth-secrets
  labels:
    app: traefik-forward-auth
type: Opaque
data:
  google-client-id: "{{ google_oauth_clientid | b64encode }}"
  google-client-secret: "{{ google_oauth_clientsecret | b64encode }}"
  secret: "{{ google_oauth_secret | b64encode }}"
  public-domain: "{{ public_domain | b64encode }}"
  auth-host: "{{ ['auth', public_domain ] | join('.') | b64encode }}"
  whitelist: "{{ google_oauth_allowlist | b64encode }}"

---
apiVersion: v1
kind: Secret
metadata:
  name: external-access-users
data:
  # admin/admin
  users: "{{ 'admin:$apr1$adkdUll5$6OcqMz9DXhIRG8pLItoWd/' | b64encode }}"

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-forward-auth
spec:
  forwardAuth:
    address: http://traefik-forward-auth:4181
    authResponseHeaders:
      - X-Forwarded-User

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-forward-auth
  annotations:
    kubernetes.io/ingress.class: external
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`{{ ['auth', public_domain ] | join('.') }}`)
    services:
    - name: traefik-forward-auth
      passHostHeader: false
      port: 4181
    middlewares:
      - name: traefik-forward-auth
  tls:
    certResolver: letsencrypt


---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: access-status
spec:
  rules:
    - host: access-status.{{ clustername }}.{{ ipa_domain }} 
      http:
        paths:
          - path: /
            backend:
              serviceName: traefik-external-ingress-ui
              servicePort: 80

# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: traefik-dashboard
#   annotations:
#     kubernetes.io/ingress.class: external
# spec:
#   entryPoints:
#   - traefik
#   routes:
#   - match: (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
#     kind: Rule
#     services:
#     - name: api@internal
#       kind: TraefikService
#     middlewares: []
    
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-external-ingress

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-external-ingress
    namespace: traefik
